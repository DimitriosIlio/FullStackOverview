{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\SHA-C24-FullStackCourse\\\\Week21\\\\FullStack-Overview\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Import necessary components and libraries\nimport AddTodo from \"./components/AddForm\";\nimport TodoList from \"./components/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n\n  // Function to get all the tasks from the database\n  async function getAllTodos() {\n    try {\n      const response = await fetch(\"/api/todos\"); // Assuming your backend endpoint for fetching todos is \"/api/todos\"\n      const data = await response.json();\n      setTodos(data);\n    } catch (error) {\n      console.error(\"Error fetching todos:\", error);\n    }\n  }\n\n  // Render all the tasks on the screen once you open the app\n  useEffect(() => {\n    // Call the getAllTodos function here to populate the initial todos\n    getAllTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      getAllTodos: getAllTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      getAllTodos: getAllTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AddTodo","TodoList","useEffect","useState","jsxDEV","_jsxDEV","App","_s","todos","setTodos","getAllTodos","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/SHA-C24-FullStackCourse/Week21/FullStack-Overview/client/src/App.js"],"sourcesContent":["// Import necessary components and libraries\r\nimport AddTodo from \"./components/AddForm\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  // Function to get all the tasks from the database\r\n  async function getAllTodos() {\r\n    try {\r\n      const response = await fetch(\"/api/todos\"); // Assuming your backend endpoint for fetching todos is \"/api/todos\"\r\n      const data = await response.json();\r\n      setTodos(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching todos:\", error);\r\n    }\r\n  }\r\n\r\n  // Render all the tasks on the screen once you open the app\r\n  useEffect(() => {\r\n    // Call the getAllTodos function here to populate the initial todos\r\n    getAllTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todo App</h1>\r\n      <AddTodo getAllTodos={getAllTodos} />\r\n      <TodoList todos={todos} getAllTodos={getAllTodos} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,eAAeO,WAAWA,CAAA,EAAG;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;MAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,QAAQ,CAACI,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF;;EAEA;EACAb,SAAS,CAAC,MAAM;IACd;IACAQ,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBjB,OAAA,CAACL,OAAO;MAACU,WAAW,EAAEA;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCjB,OAAA,CAACJ,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACE,WAAW,EAAEA;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACf,EAAA,CA3BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}